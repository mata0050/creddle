// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // if you are doing migrations you will need shadow url
  // shadowDatabaseUrl = env("SHADOW_URL")
  referentialIntegrity= "prisma"
}

model User {
  id         String       @id @default(uuid())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  email      String       @unique
  firstName  String
  lastName   String
  phone      String
  github     String
  location   String
  summary    String
  education  Education[]
  employment Employment[]
  projects   Project[]
  skills     Skill[]
}

model Education {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  school    String
  degree    String
  field     String
  startDate DateTime
  endDate   DateTime
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Employment {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  company     String
  position    String
  startDate   DateTime
  endDate     DateTime
  description String
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Project {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  link        String
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Skill {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}
